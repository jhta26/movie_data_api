{
  "_args": [
    [
      {
        "raw": "node-mocks-http@^1.5.8",
        "scope": null,
        "escapedName": "node-mocks-http",
        "name": "node-mocks-http",
        "rawSpec": "^1.5.8",
        "spec": ">=1.5.8 <2.0.0",
        "type": "range"
      },
      "/Users/jasonhsu/movie_site_api"
    ]
  ],
  "_from": "node-mocks-http@>=1.5.8 <2.0.0",
  "_id": "node-mocks-http@1.5.8",
  "_inCache": true,
  "_location": "/node-mocks-http",
  "_nodeVersion": "9.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/node-mocks-http_1.5.8_1519797465624_0.4655913842819215"
  },
  "_npmUser": {
    "name": "howardabrams",
    "email": "howard.abrams@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-mocks-http@^1.5.8",
    "scope": null,
    "escapedName": "node-mocks-http",
    "name": "node-mocks-http",
    "rawSpec": "^1.5.8",
    "spec": ">=1.5.8 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/node-mocks-http/-/node-mocks-http-1.5.8.tgz",
  "_shasum": "cbcc6dc8278861f96522c51ae858cf62806e2f80",
  "_shrinkwrap": null,
  "_spec": "node-mocks-http@^1.5.8",
  "_where": "/Users/jasonhsu/movie_site_api",
  "author": {
    "name": "Howard Abrams",
    "email": "howard.abrams@gmail.com",
    "url": "http://www.github.com/howardabrams"
  },
  "bugs": {
    "url": "https://github.com/howardabrams/node-mocks-http/issues"
  },
  "contributors": [
    {
      "name": "Howard Abrams",
      "email": "howard.abrams@gmail.com",
      "url": "https://github.com/howardabrams"
    },
    {
      "name": "Johnny Estilles",
      "email": "johnny.estilles@agentia.asia",
      "url": "https://github.com/JohnnyEstilles"
    }
  ],
  "dependencies": {
    "accepts": "^1.3.3",
    "depd": "^1.1.0",
    "fresh": "^0.5.2",
    "merge-descriptors": "^1.0.1",
    "methods": "^1.1.2",
    "mime": "^1.3.4",
    "net": "^1.0.2",
    "parseurl": "^1.3.1",
    "range-parser": "^1.2.0",
    "type-is": "^1.6.14"
  },
  "description": "Mock 'http' objects for testing Express routing functions",
  "devDependencies": {
    "@types/express": "^4.11.0",
    "chai": "^3.5.0",
    "eslint": "^3.13.1",
    "gulp": "^3.9.1",
    "gulp-eslint": "^3.0.1",
    "gulp-istanbul": "^1.1.1",
    "gulp-mocha": "^3.0.1",
    "istanbul": "^0.4.5",
    "mocha": "^3.2.0",
    "run-sequence": "~1.2.2",
    "sinon": "^1.17.7",
    "sinon-chai": "^2.8.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-M0hzy8zR8vPy5WQcfRnFHZ0Rzi+Ru3P7QLa4NZQAnxbFHyiwLgzseuvfnItCfa15Q2sWJNNxjNssjpJiQ+wocA==",
    "shasum": "cbcc6dc8278861f96522c51ae858cf62806e2f80",
    "tarball": "https://registry.npmjs.org/node-mocks-http/-/node-mocks-http-1.5.8.tgz",
    "fileCount": 17,
    "unpackedSize": 65402
  },
  "engines": {
    "node": ">=0.6"
  },
  "files": [
    "lib"
  ],
  "gitHead": "15e18c8fb4905eb2c92254072f03258fba8dbe74",
  "homepage": "https://github.com/howardabrams/node-mocks-http",
  "keywords": [
    "mock",
    "stub",
    "dummy",
    "nodejs",
    "js",
    "testing",
    "test",
    "http",
    "http mock"
  ],
  "license": "MIT",
  "main": "./lib/http-mock.js",
  "maintainers": [
    {
      "name": "alanjames1987",
      "email": "alanjames1987@gmail.com"
    },
    {
      "name": "howardabrams",
      "email": "howard@howardabrams.com"
    },
    {
      "name": "johnnyestilles",
      "email": "johnny.estilles@agentia.asia"
    },
    {
      "name": "xiaoquqi",
      "email": "xiaoquqi@gmail.com"
    }
  ],
  "name": "node-mocks-http",
  "optionalDependencies": {},
  "readme": "[![node-mocks-http logo][nmh-logo]][nmh-url]\n---\n[![NPM version][npm-badge]][npm-url]\n[![Build Status][travis-badge]][travis-url]\n[![Gitter chat][gitter-badge]][gitter-url]\n\n\nMock 'http' objects for testing [Express][express-url]\nrouting functions, but could be used for testing any\n[Node.js][node-url] web server applications that have\ncode that requires mockups of the `request` and `response` objects.\n\n## Installation\n\nThis project is available as a\n[NPM package][npm-url].\n\n```bash\n$ npm install --save-dev node-mocks-http\n```\n\n> Our example includes `--save-dev` based on the assumption that **node-mocks-http** will be used as a development dependency..\n\nAfter installing the package include the following in your test files:\n\n```js\nvar httpMocks = require('node-mocks-http');\n```\n\n## Usage\n\nSuppose you have the following Express route:\n\n```js\napp.get('/user/:id', routeHandler);\n```\n\nAnd you have created a function to handle that route's call:\n\n```js\nvar routeHandler = function( request, response ) { ... };\n```\n\nYou can easily test the `routeHandler` function with some code like\nthis using the testing framework of your choice:\n\n```js\nexports['routeHandler - Simple testing'] = function(test) {\n\n    var request  = httpMocks.createRequest({\n        method: 'GET',\n        url: '/user/42',\n        params: {\n          id: 42\n        }\n    });\n\n    var response = httpMocks.createResponse();\n\n    routeHandler(request, response);\n\n    var data = JSON.parse( response._getData() );\n    test.equal(\"Bob Dog\", data.name);\n    test.equal(42, data.age);\n    test.equal(\"bob@dog.com\", data.email);\n\n    test.equal(200, response.statusCode );\n    test.ok( response._isEndCalled());\n    test.ok( response._isJSON());\n    test.ok( response._isUTF8());\n\n    test.done();\n\n};\n```\n\n## API\n### .createRequest()\n\n```\nhttpMocks.createRequest(options)\n```\n\nWhere options is an object hash with any of the following values:\n\noption | description | default value\n------ | ----------- | -------------\n`method`| request HTTP method | 'GET'\n`url` | request URL | ''\n`originalUrl` | request original URL | `url`\n`baseUrl` | request base URL | `url`\n`path` | request path | ''\n`params` | object hash with params | {}\n`session` | object hash with session values | `undefined`\n`cookies` | object hash with request cookies | {}\n`signedCookies` | object hash with signed cookies | `undefined`\n`headers` | object hash with request headers | {}\n`body` | object hash with body | {}\n`query` | object hash with query values | {}\n`files` | object hash with values | {}\n\n### .createResponse()\n\n```js\nhttpMocks.createResponse(options)\n```\n\nWhere options is an object hash with any of the following values:\n\noption | description | default value\n------ | ----------- | -------------\n`locals` | object that contains `response` local variables | `{}`\n`eventEmitter` | event emitter used by `response` object | `mockEventEmitter`\n`writableStream`  | writable stream used by `response` object | `mockWritableStream`\n`req` | Request object being responded to | null\n\n> NOTE: The out-of-the-box mock event emitter included with `node-mocks-http` is\nnot a functional event emitter and as such does not actually emit events. If you\nwish to test your event handlers you will need to bring your own event emitter.\n\n> Here's an example:\n\n```js\nvar httpMocks = require('node-mocks-http');\nvar res = httpMocks.createResponse({\n  eventEmitter: require('events').EventEmitter\n});\n\n// ...\n  it('should do something', function(done) {\n    res.on('end', function() {\n      assert.equal(...);\n      done();\n    });\n  });\n// ...\n```\n\n### .createMocks()\n\n```js\nhttpMocks.createMocks(reqOptions, resOptions)\n```\n\nMerges `createRequest` and `createResponse`. Passes given options object to each\nconstructor. Returns an object with properties `req` and `res`.\n\n## Design Decisions\n\nWe wanted some simple mocks without a large framework.\n\nWe also wanted the mocks to act like the original framework being\nmocked, but allow for setting of values before calling and inspecting\nof values after calling.\n\n## For Developers\n\nWe are looking for more volunteers to bring value to this project,\nincluding the creation of more objects from the\n[HTTP module][node-http-module-url].\n\nThis project doesn't address all features that must be\nmocked, but it is a good start. Feel free to send pull requests,\nand a member of the team will be timely in merging them.\n\nIf you wish to contribute please read our [Contributing Guidelines](CONTRIBUTING.md).\n\n\n## Release Notes\n\nMost releases fix bugs with our mocks or add features similar to the\nactual `Request` and `Response` objects offered by Node.js and extended\nby Express.\n\nSee the [Release History](HISTORY.md) for details.\n\n[release-notes]: https://github.com/howardabrams/node-mocks-http/releases\n[release-v1.4.4]: https://github.com/howardabrams/node-mocks-http/releases/tag/v1.4.4\n\nLicense\n---\n\nLicensed under [MIT](https://github.com/howardabrams/node-mocks-http/blob/master/LICENSE).\n\n[nmh-logo]: https://raw.githubusercontent.com/wiki/howardabrams/node-mocks-http/images/nmh-logo-200x132.png\n[nmh-url]: https://github.com/howardabrams/node-mocks-http\n\n[npm-badge]: https://badge.fury.io/js/node-mocks-http.png\n[npm-url]: https://www.npmjs.com/package/node-mocks-http\n\n[travis-badge]: https://travis-ci.org/howardabrams/node-mocks-http.svg?branch=master\n[travis-url]: https://travis-ci.org/howardabrams/node-mocks-http\n\n[gitter-badge]: https://badges.gitter.im/howardabrams/node-mocks-http.png\n[gitter-url]: https://gitter.im/howardabrams/node-mocks-http\n\n[express-url]: http://expressjs.com/\n[node-url]: http://www.nodejs.org\n[node-http-module-url]: http://nodejs.org/docs/latest/api/http.html\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/howardabrams/node-mocks-http.git"
  },
  "scripts": {
    "postversion": "npm publish && git push --follow-tags",
    "spec": "gulp spec",
    "test": "gulp test"
  },
  "types": "./lib/index.d.ts",
  "version": "1.5.8"
}
